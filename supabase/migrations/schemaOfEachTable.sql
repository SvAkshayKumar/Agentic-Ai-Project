create table public.user_profiles (
  id uuid not null,
  display_name text null,
  age_range text null,
  preferred_activities text[] null default '{}'::text[],
  wellness_goals text[] null default '{}'::text[],
  created_at timestamp with time zone null default now(),
  updated_at timestamp with time zone null default now(),
  avatar text not null default 'https://res.cloudinary.com/dhemfvxnm/image/upload/v1757958403/memo_35_ixu6ha.png'::text,
  username text null,
  gender text null default 'prefer_not_say'::text,
  dob date null,
  favorite_color text null,
  personal_details text null,
  constraint user_profiles_pkey primary key (id),
  constraint user_profiles_username_key unique (username),
  constraint user_profiles_id_fkey foreign KEY (id) references auth.users (id) on delete CASCADE,
  constraint user_profiles_age_range_check check (
    (
      age_range = any (
        array['13-15'::text, '16-18'::text, '19-24'::text]
      )
    )
  ),
  constraint user_profiles_gender_check check (
    (
      gender = any (
        array[
          'male'::text,
          'female'::text,
          'non-binary'::text,
          'prefer_not_say'::text
        ]
      )
    )
  )
) TABLESPACE pg_default;

create index IF not exists idx_user_profiles_username on public.user_profiles using btree (username) TABLESPACE pg_default;

create table public.user_ai_summaries (
  id bigint generated by default as identity not null,
  user_id uuid not null,
  diary_summary text null,
  aichat_summary text null,
  updated_at timestamp with time zone null default now(),
  recommendations jsonb null,
  prompt_count integer null default 0,
  last_prompts text[] null default array[]::text[],
  chat_counter integer null default 0,
  constraint user_ai_summaries_pkey primary key (id),
  constraint user_ai_summaries_user_id_key unique (user_id),
  constraint user_ai_summaries_user_id_fkey foreign KEY (user_id) references auth.users (id) on delete CASCADE
) TABLESPACE pg_default;

create table public.static_motivations (
  id uuid not null default gen_random_uuid (),
  created_at timestamp with time zone not null default now(),
  title text not null,
  full_story text not null,
  imagelink text not null,
  audiolink text null,
  category text not null,
  "readTime" text not null,
  constraint static_motivations_pkey primary key (id)
) TABLESPACE pg_default;

create table public.posts (
  id uuid not null default gen_random_uuid (),
  created_at timestamp with time zone not null default now(),
  user_id uuid null default auth.uid (),
  author_name text null,
  content text not null,
  tags text[] null,
  comment_count integer not null default 0,
  ai_analysis jsonb null,
  constraint posts_pkey primary key (id),
  constraint posts_user_id_fkey foreign KEY (user_id) references auth.users (id) on delete set null
) TABLESPACE pg_default;

create table public.memories (
  id uuid not null default gen_random_uuid (),
  user_id uuid not null,
  diary_entry_id uuid null,
  image_url text not null,
  context text null,
  mood text null,
  created_at timestamp with time zone null default now(),
  constraint memories_pkey primary key (id),
  constraint memories_diary_entry_id_fkey foreign KEY (diary_entry_id) references diary_entries (id) on delete CASCADE,
  constraint memories_user_id_fkey foreign KEY (user_id) references auth.users (id)
) TABLESPACE pg_default;

create table public.diary_entries (
  id uuid not null default gen_random_uuid (),
  user_id uuid not null,
  title text not null,
  content text not null,
  mood_score integer null,
  tags text[] null default '{}'::text[],
  created_at timestamp with time zone null default now(),
  updated_at timestamp with time zone null default now(),
  constraint diary_entries_pkey primary key (id),
  constraint diary_entries_user_id_fkey foreign KEY (user_id) references auth.users (id),
  constraint diary_entries_mood_score_check check (
    (
      (mood_score >= 1)
      and (mood_score <= 10)
    )
  )
) TABLESPACE pg_default;

create table public.daily_motivation (
  id uuid not null default gen_random_uuid (),
  created_at timestamp with time zone not null default now(),
  name text not null,
  quote text not null,
  audiolink text not null,
  imagelink text not null,
  created_by_username text null,
  constraint daily_motivation_pkey primary key (id)
) TABLESPACE pg_default;

create table public.comments (
  id uuid not null default gen_random_uuid (),
  created_at timestamp with time zone not null default now(),
  user_id uuid not null default auth.uid (),
  author_name text null,
  content text not null,
  post_id uuid not null,
  parent_comment_id uuid null,
  ai_analysis jsonb null,
  constraint comments_pkey primary key (id),
  constraint comments_parent_comment_id_fkey foreign KEY (parent_comment_id) references comments (id) on delete CASCADE,
  constraint comments_post_id_fkey foreign KEY (post_id) references posts (id) on delete CASCADE
) TABLESPACE pg_default;

create table public.chat_messages (
  id bigint generated by default as identity not null,
  user_id uuid not null,
  created_at timestamp with time zone not null default now(),
  role text not null,
  content text not null,
  constraint chat_messages_pkey primary key (id),
  constraint chat_messages_user_id_fkey foreign KEY (user_id) references auth.users (id) on delete CASCADE,
  constraint chat_messages_role_check check ((role = any (array['user'::text, 'model'::text])))
) TABLESPACE pg_default;

create index IF not exists idx_chat_messages_user_id_created_at on public.chat_messages using btree (user_id, created_at desc) TABLESPACE pg_default;

create table public.ai_chat_pairs (
  id bigint generated by default as identity not null,
  user_id uuid null,
  user_prompt text null,
  ai_response text null,
  created_at timestamp with time zone null default now(),
  constraint ai_chat_pairs_pkey primary key (id),
  constraint ai_chat_pairs_user_id_fkey foreign KEY (user_id) references auth.users (id) on delete CASCADE
) TABLESPACE pg_default;